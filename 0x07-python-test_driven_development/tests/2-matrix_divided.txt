"""

This module contains a function that divide
a matrix by a number and returns a new list of the
division, the divisor is screened and errors are
if an exception occurs.

>>> example = __import__('2-matrix_divided').matrix_divided

>>> example(("string"), 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> example(([[1, 2, 3], [4, 5, 6]]), 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> example(([[1, 2, 3], [4, 5, 6]]), 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> example((12, 13), 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> example(([[1, 2], [3, 2, 5]]), 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> example([[4, 5]], "string")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> example([[1, 2]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> example()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> example([[1, 2]], float('inf'))
[[0.0, 0.0]]

"""
