"""
THis file is a doctest for task 7

>>> example = __import__('7-base_geometry').BaseGeometry

>>> ab = example()

>>> ab.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

>>> bb = example()

>>> bb.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> cb = example()

>>> cb.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> db = example()

>>> db.integer_validator("my_int", "12")
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer

>>> eb = example()

>>> eb.integer_validator("my_int", 12)

>>> fb = example()

>>> fb.integer_validator("my_int")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> gb = example()

>>> gb.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> hb = example()

>>> hb.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> ggg = example()

>>> ggg.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> hhh = example()

>>> hhh.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> jjj = example()

>>> jjj.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> ddd = example()

>>> ddd.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> rrr = example()

>>> rrr.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> rd = example()

>>> rd.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

"""
